# Deprecated workflow replaced by release-multiplatform.yml

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-universal:
    runs-on: macos-14 # Apple Silicon (arm64) runner; tauri-action will spawn an x86_64 build, too
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust targets
        run: |
          rustup target add aarch64-apple-darwin x86_64-apple-darwin

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      #––– Build & bundle via Tauri –––––––––––––––––––––––––––––––––––––––––––
      - name: Build Tauri (universal)
        uses: tauri-apps/tauri-action@v0.5.22
        env:
          # Code-signing / notarization secrets – set in repo → Settings → Secrets and variables → Actions
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        with:
          # Build a universal binary (arm64 + x86_64) and create .app / DMG
          args: --target universal-apple-darwin
          # Attach artefacts to workflow run ☟
          releaseDraft: true

      - name: Upload binary artefacts
        uses: actions/upload-artifact@v4
        with:
          name: blitzarch-macos-universal
          path: src-tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg
