name: BlitzArch Release (macOS ARM GUI, Windows GUI, Linux CLI)

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

concurrency:
  group: blitzarch-release
  cancel-in-progress: true

jobs:
  build-macos-arm64:
    name: macOS GUI (arm64)
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Install Rust target
        run: rustup target add aarch64-apple-darwin

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install GUI dependencies
        working-directory: gui
        run: npm install --legacy-peer-deps

      - name: Build Tauri GUI (arm64)
        uses: tauri-apps/tauri-action@v0.5.22
        env:
          RING_ALLOW_MISSING_ARM_FEATURES: 1
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        with:
                    args: --target aarch64-apple-darwin
          releaseDraft: false
        

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm64-dmg
          path: "**/bundle/dmg/*.dmg"

  build-windows-x86_64:
    name: Windows GUI (x86_64)
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install GUI dependencies
        working-directory: gui
        run: npm install --legacy-peer-deps

      - name: Build Tauri GUI (windows)
        uses: tauri-apps/tauri-action@v0.5.22
        env:
          RING_ALLOW_MISSING_ARM_FEATURES: 1
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
                    releaseDraft: false
        

      - name: Upload Windows installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-x86_64-installer
          path: |
            **/bundle/**/*.exe
            **/bundle/**/*.msi

  build-linux-cli:
    name: Linux CLI (x86_64)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build CLI only
        run: |
          cargo build --release --locked
          mkdir -p dist
          cp target/release/blitzarch dist/
          tar -czf blitzarch-linux-cli-x86_64.tar.gz -C dist blitzarch

      - name: Upload Linux CLI artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-cli-x86_64
          path: blitzarch-linux-cli-x86_64.tar.gz

  release:
    name: Create GitHub Release & attach assets
    runs-on: ubuntu-latest
    needs: [build-macos-arm64, build-windows-x86_64, build-linux-cli]
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ github.ref_name }}
          files: ./artifacts/**/*
